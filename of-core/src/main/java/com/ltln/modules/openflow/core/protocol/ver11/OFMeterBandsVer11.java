// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_factory_class.java
// Do not modify

package com.ltln.modules.openflow.core.protocol.ver11;


import com.ltln.modules.openflow.core.exceptions.*;
import com.ltln.modules.openflow.core.protocol.*;
import com.ltln.modules.openflow.core.protocol.action.*;
import com.ltln.modules.openflow.core.protocol.actionid.*;
import com.ltln.modules.openflow.core.protocol.bsntlv.*;
import com.ltln.modules.openflow.core.protocol.errormsg.*;
import com.ltln.modules.openflow.core.protocol.instruction.*;
import com.ltln.modules.openflow.core.protocol.instructionid.*;
import com.ltln.modules.openflow.core.protocol.match.*;
import com.ltln.modules.openflow.core.protocol.meterband.*;
import com.ltln.modules.openflow.core.protocol.oxm.*;
import com.ltln.modules.openflow.core.protocol.queueprop.*;
import com.ltln.modules.openflow.core.types.*;
import com.ltln.modules.openflow.core.util.*;


public class OFMeterBandsVer11 implements OFMeterBands {
    public final static OFMeterBandsVer11 INSTANCE = new OFMeterBandsVer11();




    public OFMeterBandDrop.Builder buildDrop() {
        throw new UnsupportedOperationException("OFMeterBandDrop not supported in version 1.1");
    }
    public OFMeterBandDrop drop(long rate, long burstSize) {
        throw new UnsupportedOperationException("OFMeterBandDrop not supported in version 1.1");
    }

    public OFMeterBandDscpRemark.Builder buildDscpRemark() {
        throw new UnsupportedOperationException("OFMeterBandDscpRemark not supported in version 1.1");
    }

    public OFMeterBandExperimenter.Builder buildExperimenter() {
        throw new UnsupportedOperationException("OFMeterBandExperimenter not supported in version 1.1");
    }

    public OFMessageReader<OFMeterBand> getReader() {
        throw new UnsupportedOperationException("Reader<OFMeterBand> not supported in version 1.1");
    }


    public OFVersion getVersion() {
            return OFVersion.OF_11;
    }
}
