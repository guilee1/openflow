// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_factory_class.java
// Do not modify

package com.ltln.modules.openflow.core.protocol.ver13;


import com.ltln.modules.openflow.core.exceptions.*;
import com.ltln.modules.openflow.core.protocol.*;
import com.ltln.modules.openflow.core.protocol.action.*;
import com.ltln.modules.openflow.core.protocol.actionid.*;
import com.ltln.modules.openflow.core.protocol.bsntlv.*;
import com.ltln.modules.openflow.core.protocol.errormsg.*;
import com.ltln.modules.openflow.core.protocol.instruction.*;
import com.ltln.modules.openflow.core.protocol.instructionid.*;
import com.ltln.modules.openflow.core.protocol.match.*;
import com.ltln.modules.openflow.core.protocol.meterband.*;
import com.ltln.modules.openflow.core.protocol.oxm.*;
import com.ltln.modules.openflow.core.protocol.queueprop.*;
import com.ltln.modules.openflow.core.types.*;
import com.ltln.modules.openflow.core.util.*;


public class OFQueuePropsVer13 implements OFQueueProps {
    public final static OFQueuePropsVer13 INSTANCE = new OFQueuePropsVer13();




    public OFQueuePropMinRate.Builder buildMinRate() {
        return new OFQueuePropMinRateVer13.Builder();
    }
    public OFQueuePropMinRate minRate(int rate) {
        return new OFQueuePropMinRateVer13(
                rate
                    );
    }

    public OFQueuePropMaxRate.Builder buildMaxRate() {
        return new OFQueuePropMaxRateVer13.Builder();
    }
    public OFQueuePropMaxRate maxRate(int rate) {
        return new OFQueuePropMaxRateVer13(
                rate
                    );
    }

    public OFMessageReader<OFQueueProp> getReader() {
        return OFQueuePropVer13.READER;
    }


    public OFVersion getVersion() {
            return OFVersion.OF_13;
    }
}
